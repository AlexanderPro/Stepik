Вопрос:
В видеороликах в этом уроке в качестве примера взята фотография купола мечети. Я проводил все эксперименты с ней.

Все шесть фотографий, показанных в этом уроке, вы можете скачать в исходных RAW-файлах:

Низкочастотные (с малой детализацией): ball.cr2, seagull.cr2, sunset.cr2
Высокочастотные (с высокой детализацией): dome.pef, forest.cr2, spring.cr2


dome.pef


Вам для подобных экспериментов предлагаю другую фотографию, относящуюся к "низкочастотным" снимкам. Задачи рассчитаны на то, что вы работаете с этим файлом (см. ниже), другие -- только на случай, если вы хотите посмотреть, какие результаты будут для других снимков.





sunset.cr2



План работы на этот урок:


Научимся оценивать ошибку сжатия: нужно понять метод оценки и способ его применения.
Посмотрим, отличаются ли файлы, сохраненные в lossless форматы, от оригиналов.
Оценим потери на сжатии в JPEG и WebP при разных параметрах сжатия.
Оценка потерь

Что мы подразумеваем под потерями при кодировании? Изменения в результирующем файле относительно исходного. Разницу. Как в математике получить разницу? Надо вычесть одно из другого. Мы будем вычитать кадры, получая “файл-разницу”. Но такое изображение всё равно представляет из себя множество значений отдельных пикселей.

Чтобы численно оценить разницу, нам нужно в простейшем случае усреднить все значения пикселей. Уменьшим изображение до одного пикселя, его значение и будет средним для всего файла-разницы.

На следующих шагах мы потренируемся делать отдельные части этой задачи, а в конце этого практического урока вы сможете, как и во втором модуле, выполнить комплексную задачу и сделать обоснованные, подкреплённые численными оценками, выводы.

Сжатие

Чтобы оценить ошибки сжатия, нужно их сначала наделать.

Сперва проверим утверждение, что бывает сжатие без потерь. Вдруг нас всё время обманывают: ведь объём файлов действительно становится меньше, причём, в разных форматах по-разному.


Задача: сожмите исходный RAW в форматы:  

PNG c глубиной цвета 16 bit,
PNG с глубиной цвета 8 bit
JPEG Lossless
WebP Lossless
Заодно подготовим файлы деструктивных форматов: сожмите исходный RAW в форматы:

WebP с качеством 30% и 60%
JPEG с качеством 30% и 60%
JPEG того же размера, что полученный WebP 60% (±10%),
Все файлы, кроме одного, должны быть с глубиной 8 бит/канал.

К сожалению, мы не сможем исследовать возможности BPG, его поддержка ещё не полностью включена в ImageMagick.

Вы удивитесь разнице в качестве, именно за этим нам пригодятся запасные JPEG и WebP (30% и 60%). Посмотрите эти четыре файла и сравните их размеры — уже заметна разница. Но по-хорошему сравнивать эффективность кодирования надо, фиксируя качество, тогда получим численный показатель — разницу в размере файла.

Не спешите на глазок подбирать уровень качества в JPEG по аналогии с указанием "-quality 60" для WebP.  Для этого есть более подходящий ключ, если вы уже знаете размер, к которому стремитесь. При таком сжатии точного совпадения размера не будет, поэтому допускается небольшая погрешность. Просто вводите в настройках кодирования то число килобайт, которое занимает соответствующий файл WebP.  

По той же ссылке найдёте, как кодировать Lossless JPEG. Будет полезно для осознания возможностей кодирования, если вы ознакомитесь с другими ключами. Кодирование Lossless WEBP описано, например, здесь.

Как это сделать:

В этом и следующих заданиях вам предложен шаблон командного файла для каждого шага. Там вписаны имена файлов; используйте только эти имена, иначе проверять ваши ответы станет сложно.

Сохраните эти файлы-шаблоны в пустую папку, туда же положите RAW-файл. В файлах записывайте команды, каждую с новой строки. В последней строке напишите "Pause", так вам будет проще увидеть результаты выполнения команд. Сохраните файл, запустите его двойным кликом — это командный файл Windows. Он выполнит последовательно все написанные команды и оставит открытой консоль, пока вы не нажмете любую кнопку (чтобы видеть ошибки, если они будут). Для отладки, чтобы не ждать выполнения уже работающих команд, вы можете закомментировать на время уже работающие строки командой REM -- они будут игнорироваться.

Содержимое получившегося командного файла (9 строк с командами) поместите в ответ, а наш трудолюбивый скрипт попробует разобраться, всё ли вы сделали правильно.

Ответ:
convert sunset.cr2 -depth 16 PNG16.png
convert sunset.cr2 -depth 8 PNG8.png
convert sunset.cr2 -depth 8 -compress lossless JLL.jpg
convert sunset.cr2 -depth 8 -define webp:lossless=true WLL.webp
convert sunset.cr2 -depth 8 -quality 60 J60.jpg
convert sunset.cr2 -depth 8 -quality 30 J30.jpg
convert sunset.cr2 -depth 8 -quality 60 W60.webp
convert sunset.cr2 -depth 8 -quality 30 W30.webp
convert sunset.cr2 -depth 8 -define jpeg:extent=63kb JW60.jpg