/*
¬ небоскребе n этажей. »звестно, что если уронить стекл€нный шарик с этажа номер p, и шарик разобьетс€, то если уронить шарик с этажа номер p+1, то он тоже разобьетс€. “акже известно, что при броске с последнего этажа шарик всегда разбиваетс€.¬ы хотите определить минимальный номер этажа, при падении с которого шарик разбиваетс€. ƒл€ проведени€ экспериментов у вас есть два шарика. ¬ы можете разбить их все, но в результате вы должны абсолютно точно определить этот номер.
ќпределите, какого числа бросков достаточно, чтобы заведомо решить эту задачу.

‘ормат входных данных
ѕрограмма получает на вход количество этажей в небоскребе.

‘ормат выходных данных
“ребуетс€ вывести наименьшее число бросков, при котором можно всегда решить задачу.

ѕримечание
 омментарий к первому примеру. Ќужно бросить шарик со 2-го этажа. ≈сли он разобьетс€, то бросим второй шарик с 1-го этажа, а если не разобьетс€ - то бросим шарик с 3-го этажа.

ѕодсказки
1.  ак следует действовать, если шарик был бы только один?
2. ѕусть шариков два и мы бросили один шарик с этажа номер k.  ак мы будем действовать в зависимости от того, разобьетс€ ли шарик или нет?
3. ѕусть f(n) - это минимальное число бросков, за которое можно определить искомый этаж, если бы в небоскребе было n этажей. ¬ыразите f(n) через значени€ f(a) дл€ меньших значений a.

Sample Input 1:
4

Sample Output 1:
2

Sample Input 2:
5

Sample Output 2:
3
*/

#include <iostream>
#include <cmath>
using namespace std;

int calculate(int level)
{
	if (level < 2) return 0;
	return ceil(0.5*sqrt(1 + 8 * (level - 1)) - 0.5);
}

int main() {
	int n;
	cin >> n;
	cout << calculate(n);
	return 0;
}